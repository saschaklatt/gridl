"use strict";(self.webpackChunkgridl_website=self.webpackChunkgridl_website||[]).push([[749],{3390:function(e,n,t){t.d(n,{Z:function(){return h}});var r=t(7294),l=t(5900),i=t.n(l),o=t(2053),a=function(e){var n=e.onToggle,t=e.isOn;return r.createElement("button",{onClick:n,className:"z-fab fixed bottom-4 right-4 w-16 h-16 rounded-full border-white border-solid border-2 bg-gray-900 text-white block lg:hidden shadow-lg"},t?r.createElement("svg",{width:"24",height:"24",fill:"none",className:"absolute top-1/2 left-1/2 -mt-3 -ml-3 transition duration-300 transform"},r.createElement("path",{d:"M6 18L18 6M6 6l12 12",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round"})):r.createElement("svg",{width:"24",height:"24",fill:"none",className:"absolute top-1/2 left-1/2 -mt-3 -ml-3 transition duration-300 transform"},r.createElement("path",{d:"M4 8h16M4 16h16",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round"})))},c=t(1597),s=function(e){var n=e.label,t=e.link,l=e.items,i=e.depth,o=e.onClick,a=t?r.createElement(c.rU,{className:"text-current",to:t,onClick:o},n):r.createElement("span",{className:"text-current"},n);return l&&l.length?r.createElement(r.Fragment,null,a,r.createElement(u,{items:l,onItemClick:o,depth:(i||0)+1})):a},d=function(e){var n=e.isVisible,t=e.onClick,l=n?"opacity-30":"opacity-0 pointer-events-none",o=i()("fixed inset-0 bg-black z-overlay","transform-gpu lg:transform-none transition-opacity duration-500 ease-in-out lg:hidden",l);return r.createElement("div",{className:o,onClick:t})},u=function(e){var n=e.items,t=e.depth,l=e.onItemClick,o=0===t?"text-xl":"text-base",a=0===t?"px-8 my-6":"px-4 my-4",c=0===t?"":"border-gray-600 border-solid border-solid border-l-2";return r.createElement("ul",{className:i()(a,o,c)},n.map((function(e){return r.createElement("li",{key:e.label},r.createElement(s,Object.assign({},e,{depth:t,onClick:l})))})))},m=function(e){var n=e.items,t=e.isVisible,l=e.className,o=e.onBackdropClick,a=e.onItemClick,c=e.depth,s=void 0===c?0:c,m=t?"translate-x-full":"",g=i()("sidebar",m,l);return r.createElement(r.Fragment,null,r.createElement(d,{isVisible:t,onClick:o}),r.createElement("aside",{className:g},r.createElement(u,{items:n,depth:s,onItemClick:a})))},g=t(5593),h=function(e){var n=e.children,t=e.className,l=e.sidebarItems,c=(0,r.useState)(!1),s=c[0],d=c[1],u=function(){return d(!1)};return r.createElement(r.Fragment,null,r.createElement(o.Z,null),r.createElement("div",{className:"min-h-screen flex flex-col"},r.createElement("main",{className:i()("main flex flex-column",t)},r.createElement(m,{items:l,isVisible:s,onBackdropClick:u,onItemClick:u}),r.createElement("div",{className:"flex-1 flex flex-col overflow-y-auto"},n),r.createElement(a,{onToggle:function(){return d(!s)},isOn:s})),r.createElement(g.Z,null)))}},4357:function(e,n,t){t.d(n,{M:function(){return l}});var r=t(5632),l=[{label:"Basics",items:[{label:"Data structure",link:(0,r.hb)("grid-data-structure")},{label:"Selectors",link:(0,r.hb)("grid-selectors")},{label:"Transformers",link:(0,r.hb)("grid-transformers")},{label:"Search & Find",link:(0,r.hb)("searching-cell-values-in-a-grid")},{label:"Walkers",link:(0,r.hb)("grid-walkers")},{label:"Reducers",link:(0,r.hb)("grid-reducers")},{label:"Side effects",link:(0,r.hb)("grid-side-effects")}]}]},4611:function(e,n,t){t.r(n);var r=t(7294),l=t(1085),i=t(3390),o=t(7431),a=t(4357);n.default=function(){return r.createElement(i.Z,{sidebarItems:a.M},r.createElement(o.Z,{title:"Getting started with grid selectors",description:"Instructions for selecting cells, neighbouring cells, columns, rows or areas in a grid."}),r.createElement("section",{className:"p-8"},r.createElement("h1",null,"Selectors"),r.createElement("p",null,"To select data from a grid instance, gridl provides some selector function, which allow you to access data like cell values, columns, rows, subgrids or neighbouring cells."),r.createElement("a",{id:"selectCell",className:"text-current hover:text-current"},r.createElement("h2",null,"Selecting a single cell")),r.createElement("p",null,"Select a cell at a certain x,y position in the grid."),r.createElement(l.Z,{code:c,language:"javascript"}),r.createElement("h2",null,"Selecting a column"),r.createElement("p",null,"Select a column at a certain x-position in the grid."),r.createElement(l.Z,{code:s,language:"javascript"}),r.createElement("h2",null,"Selecting a row"),r.createElement("p",null,"Select a row at a certain y-position in the grid."),r.createElement(l.Z,{code:d,language:"javascript"}),r.createElement("h2",null,"Selecting a sub grid"),r.createElement("p",{dangerouslySetInnerHTML:{__html:"The sub grid selector allows you to extract a certain area of a grid as a new grid instance. The area is specified by <code>x</code>, <code>y</code>, <code>columnCount</code> and <code>rowCount</code> values."}}),r.createElement(l.Z,{code:u,language:"javascript"}),r.createElement("h2",null,"Selecting neighbouring cells"),r.createElement("p",null,"Select some or all neighbouring cells of a certain cell in the grid. By default, the selector returns all surrounding neighbours. This can be changed by providing a list of positions with the optional ",r.createElement("code",null,"positions")," property."),r.createElement(l.Z,{code:m,language:"javascript"})))};var c='import {createGridFromArray2D, selectCell} from "gridl/core";\n\nconst grid = createGridFromArray2D([\n    [0,  1,  2,  3],\n    [4,  5,  6,  7],\n    [8,  9, 10, 11],\n]);\n\n// get the cell value at position = {x: 1, y: 2}\nselectCell({grid, x: 2, y: 1}); // => 6',s='import {createGridFromArray2D, selectColumn} from "gridl/core";\n\nconst grid = createGridFromArray2D([\n    [  0,   1,   2,   3],\n    [  4,   5,   6,   7],\n    ["x", "x", "x", "x"],\n]);\n\n// get the column at x = 2\nselectColumn({grid, x: 2}); // => [2, 6, "x"]',d='import {createGridFromArray2D, selectRow} from "gridl/core";\n\nconst grid = createGridFromArray2D([\n    [0,  1,  2,  3],\n    [4,  5,  6,  7],\n    [8,  9, 10, 11],\n]);\n\n// get the row at y = 1\nselectRow({grid, y: 1}); // => [4, 5, 6, 7];',u='import {createGridFromArray2D, selectSubGrid} from "gridl/core";\n\nconst grid = createGridFromArray2D([\n    [  0,   1,   2,   3],\n    [  4,   5,   6,   7],\n    ["x", "x", "x", "x"],\n]);\n\nselectSubGrid({grid, x: 1, y: 1, columnCount: 2, rowCount: 2});\n// returned subgrid (which is a new grid instance):\n// {\n//     x: 1,\n//     y: 1,\n//     cellCount: 4,\n//     columnCount: 2,\n//     rowCount: 2,\n//     array2D: [\n//         [  5,   6],\n//         ["x", "x"],\n//     ],\n// }',m='import {\n    createGridFromArray2D,\n    selectSubGrid,\n    NorthWest,\n    North,\n    NorthEast,\n    OrthogonalDirections,\n} from "gridl/core";\n\nconst grid = createGridFromArray2D([\n    [0,  1,  2,  3],\n    [4,  5,  6,  7],\n    [8,  9, 10, 11],\n]);\n\n// get all neighbouring cells around the origin at position {x: 1, y: 0}\nselectNeighbours({grid, origin: {x: 1, y: 0}});\n// => [\n//     {cell:  1,  position: {x: 1, y: 0}},\n//     {cell:  2,  position: {x: 2, y: 0}},\n//     {cell:  6,  position: {x: 2, y: 1}},\n//     {cell: 10,  position: {x: 2, y: 2}},\n//     {cell:  9,  position: {x: 1, y: 2}},\n//     {cell:  8,  position: {x: 0, y: 2}},\n//     {cell:  4,  position: {x: 0, y: 1}},\n//     {cell:  0,  position: {x: 0, y: 0}},\n// ]\n\n// get orthogonal neighbours only (North, East, South, East)\nselectNeighbours({grid, origin: {x: 1, y: 1, positions: OrthogonalDirections}});\n// => [\n//     {cell: 1,  position: {x: 1, y: 0}},\n//     {cell: 6,  position: {x: 2, y: 1}},\n//     {cell: 9,  position: {x: 1, y: 2}},\n//     {cell: 4,  position: {x: 0, y: 1}},\n// ]\n\n// select top neighbours only\nconst topNeighbourPositions = [NorthWest, North, NorthEast];\nselectNeighbours({grid, origin: {x: 2, y:1}, positions: topNeighbourPositions});\n// => [\n//     {cell: 1,  position: {x: 1, y: 0}},\n//     {cell: 2,  position: {x: 2, y: 0}},\n//     {cell: 3,  position: {x: 3, y: 0}},\n// ]'}}]);
//# sourceMappingURL=component---src-pages-getting-started-grid-selectors-tsx-d3840b458e501a39bee3.js.map