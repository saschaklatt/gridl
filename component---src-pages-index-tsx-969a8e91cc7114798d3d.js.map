{"version":3,"file":"component---src-pages-index-tsx-969a8e91cc7114798d3d.js","mappings":"qJAkBA,IAVgC,SAAC,GAAD,IAAEA,EAAF,EAAEA,SAAUC,EAAZ,EAAYA,UAAZ,OAC5B,gCACI,gBAAC,IAAD,MACA,uBAAKA,UAAU,8BACX,wBAAMA,UAAWA,GAAYD,GAC7B,gBAAC,IAAD,U,8GCcZ,EAzByB,WACrB,OAA0CE,EAAAA,EAAAA,WAAS,GAA5CC,EAAP,KAAsBC,EAAtB,KAQA,OANAC,EAAAA,EAAAA,YAAU,WACFF,GACAC,GAAiB,KAEtB,CAACD,EAAeC,IAEZD,EAAgB,KACnB,wBAAMF,UAAU,cACZ,qBACIA,UAAU,gBACVK,KAAK,uCACLC,IAAI,sBACJ,YAAU,QACV,kBAAgB,OAChB,aAAW,oCANf,UCWZ,EAlBwB,kBACpB,gCACI,gBAACC,EAAA,EAAD,KACI,0BAAQC,OAAK,EAACC,OAAK,EAACC,IAAI,0CAE5B,0BAAQV,UAAU,sCACd,sBAAIA,UAAU,+CAA+C,SAC7D,qBAAGA,UAAU,uCAAuC,6CACpD,uBAAKA,UAAU,8CACX,gBAAC,KAAD,CAAMW,IAAIC,EAAAA,EAAAA,MAAsBZ,UAAU,eACrC,eAEL,gBAAC,EAAD,U,UCMhB,EAb8C,SAAC,GAAD,IAAEa,EAAF,EAAEA,QAAF,OAC1C,2BAASb,UAAU,uBACf,uBAAKA,UAAU,4GACVa,EAAQC,KAAI,gBAAEC,EAAF,EAAEA,MAAOC,EAAT,EAASA,KAAT,OACT,uBAAKC,IAAKF,EAAOf,UAAU,eACvB,sBAAIA,UAAU,iBAAiBe,GAC/B,qBAAGf,UAAU,WAAWgB,U,oBCO5C,EAZwD,SAAC,GAAD,IAAEE,EAAF,EAAEA,SAAF,OACpD,2BAASlB,UAAU,2DACf,0CACCkB,EAASJ,KAAI,gBAAEC,EAAF,EAAEA,MAAOI,EAAT,EAASA,QAAT,OACV,uBAAKF,IAAKF,EAAOf,UAAU,QACvB,sBAAIA,UAAU,qCAAqCe,GACnD,gBAAC,IAASI,SCiBpBC,EAAe,CACjB,CACIL,MAAO,eACPI,QAAS,CACLE,KAAM,yFAGd,CACIN,MAAO,YACPI,QAAS,CACLE,KAAM,wBAGd,CACIN,MAAO,aACPI,QAAS,CACLE,KAAM,qBAGd,CACIN,MAAO,cACPI,QAAS,CACLG,SAAU,aACVD,KAAM,mGAGd,CACIN,MAAO,UACPI,QAAS,CACLG,SAAU,aACVD,KAAM,qEAKZR,EAAU,CACZ,CACIE,MAAO,YACPC,KAAM,gGAEV,CACID,MAAO,eACPC,KAAM,oHAEV,CACID,MAAO,cACPC,KACI,mIAER,CACID,MAAO,cACPC,KACI,2IAER,CACID,MAAO,YACPC,KACI,6HAER,CACID,MAAO,QACPC,KAAM,2GAId,EA5FsB,kBAClB,gBAAC,IAAD,KACI,gBAAC,IAAD,CAAKO,YAAY,uHACjB,gBAAC,EAAD,MACA,gBAAC,EAAD,CAAeV,QAASA,IACxB,gBAAC,EAAD,CAAoBK,SAAUE","sources":["webpack://gridl-website/./src/components/layout/layout-default.tsx","webpack://gridl-website/./src/components/gh-button.tsx","webpack://gridl-website/./src/components/sections/hero.tsx","webpack://gridl-website/./src/components/sections/teaser.tsx","webpack://gridl-website/./src/components/sections/code-example.tsx","webpack://gridl-website/./src/pages/index.tsx"],"sourcesContent":["import React, {FC} from \"react\";\nimport MainNav from \"./main-nav\";\nimport PageFooter from \"./page-footer\";\n\ninterface LayoutProps {\n    className?: string;\n}\n\nconst Layout: FC<LayoutProps> = ({children, className}) => (\n    <>\n        <MainNav />\n        <div className=\"min-h-screen flex flex-col\">\n            <main className={className}>{children}</main>\n            <PageFooter />\n        </div>\n    </>\n);\n\nexport default Layout;\n","import React, {FC, useEffect, useState} from \"react\";\n\nconst GitHubButton: FC = () => {\n    const [isFirstRender, setIsFirstRender] = useState(true);\n\n    useEffect(() => {\n        if (isFirstRender) {\n            setIsFirstRender(false);\n        }\n    }, [isFirstRender, setIsFirstRender]);\n\n    return isFirstRender ? null : (\n        <span className=\"btn-github\">\n            <a\n                className=\"github-button\"\n                href=\"https://github.com/klattiation/gridl\"\n                rel=\"noreferrer noopener\"\n                data-size=\"large\"\n                data-show-count=\"true\"\n                aria-label=\"Star klattiation/gridl on GitHub\"\n            >\n                Star\n            </a>\n        </span>\n    );\n};\n\nexport default GitHubButton;\n","import {Link} from \"gatsby\";\nimport React, {FC} from \"react\";\nimport Helmet from \"react-helmet\";\nimport {gettingStartedSlug} from \"../../helpers/slug-helper\";\nimport GitHubButton from \"../gh-button\";\n\nconst HeroSection: FC = () => (\n    <>\n        <Helmet>\n            <script async defer src=\"https://buttons.github.io/buttons.js\"></script>\n        </Helmet>\n        <header className=\"bg-gray-900 text-center py-20 px-4\">\n            <h1 className=\"text-gray-400 font-serif text-5xl p-0 mb-12\">{\"gridl\"}</h1>\n            <p className=\"text-white font-light text-3xl my-8\">{\"A modern ES6 toolbox for grid-based data.\"}</p>\n            <div className=\"flex justify-center items-center space-x-4\">\n                <Link to={gettingStartedSlug()} className=\"btn-primary\">\n                    {\"Get started\"}\n                </Link>\n                <GitHubButton />\n            </div>\n        </header>\n    </>\n);\n\nexport default HeroSection;\n","import React, {FC} from \"react\";\n\ninterface TeaserProps {\n    title: string;\n    text: string;\n}\n\ninterface TeaserSectionProps {\n    teasers: TeaserProps[];\n}\n\nconst TeaserSection: FC<TeaserSectionProps> = ({teasers}) => (\n    <section className=\"text-gray-300 py-20\">\n        <div className=\"container mx-auto px-4 lg:px-0 grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-x-4 gap-y-16 md:gap-16\">\n            {teasers.map(({title, text}) => (\n                <div key={title} className=\"text-center\">\n                    <h3 className=\"mb-2 text-2xl\">{title}</h3>\n                    <p className=\"text-lg\">{text}</p>\n                </div>\n            ))}\n        </div>\n    </section>\n);\n\nexport default TeaserSection;\n","import React, {FC} from \"react\";\nimport Code, {CodeProps} from \"../code\";\n\ninterface CodeExampleProps {\n    title: string;\n    example: CodeProps;\n}\n\ninterface CodeExampleSectionProps {\n    examples: CodeExampleProps[];\n}\n\nconst CodeExampleSection: FC<CodeExampleSectionProps> = ({examples}) => (\n    <section className=\"container mx-auto mt-8 mb-16 px-4 lg:px-0 text-gray-300\">\n        <h2>Installation</h2>\n        {examples.map(({title, example}) => (\n            <div key={title} className=\"my-8\">\n                <h3 className=\"text-base font-sans text-gray-300\">{title}</h3>\n                <Code {...example} />\n            </div>\n        ))}\n    </section>\n);\n\nexport default CodeExampleSection;\n","import React, {FC} from \"react\";\nimport HeroSection from \"../components/sections/hero\";\nimport Layout from \"../components/layout/layout-default\";\nimport TeaserSection from \"../components/sections/teaser\";\nimport {graphql} from \"gatsby\";\nimport Seo from \"../components/seo\";\nimport CodeExampleSection from \"../components/sections/code-example\";\n\nconst IndexPage: FC = () => (\n    <Layout>\n        <Seo description=\"Open source JavaScript ES6 library written in Typescript providing helper functions for grid-based or matrix data.\" />\n        <HeroSection />\n        <TeaserSection teasers={teasers} />\n        <CodeExampleSection examples={codeExamples} />\n    </Layout>\n);\n\nexport const query = graphql`\n    query {\n        site {\n            siteMetadata {\n                title\n                description\n                author {\n                    name\n                    web\n                }\n                gridl {\n                    latestVersion\n                }\n            }\n        }\n    }\n`;\n\nconst codeExamples = [\n    {\n        title: \"In a browser\",\n        example: {\n            code: `<script src=\"https://cdn.jsdelivr.net/npm/gridl@latest/_umd/index.min.js\"></script>`,\n        },\n    },\n    {\n        title: \"Using npm\",\n        example: {\n            code: `$ npm install gridl`,\n        },\n    },\n    {\n        title: \"Using yarn\",\n        example: {\n            code: `$ yarn add gridl`,\n        },\n    },\n    {\n        title: \"ES6 modules\",\n        example: {\n            language: \"javascript\",\n            code: `import {createGrid} from \"gridl/core\";\\nimport {mirrorHorizontally} from \"gridl/transformers\";`,\n        },\n    },\n    {\n        title: \"Node.js\",\n        example: {\n            language: \"javascript\",\n            code: `const {createGrid, mirrorHorizontally} = require(\"gridl/_umd)\";`,\n        },\n    },\n];\n\nconst teasers = [\n    {\n        title: \"Selectors\",\n        text: \"Easily select cells, columns, rows, sub grids or neighbouring cells with selector functions.\",\n    },\n    {\n        title: \"Transformers\",\n        text: \"Do all sorts of data transformations on your grid like adding, removing, rotating, swapping, mirroring and more.\",\n    },\n    {\n        title: \"Traversable\",\n        text:\n            \"Traverse over your grid in variety of ways. Choose from a predefined set of walker functions or just come up with your own one.\",\n    },\n    {\n        title: \"ES6 Modules\",\n        text:\n            \"Use only the parts you need and keep your bundle size as small as possible with treeshaking. Alternatively, there is also a UMD bundle.\",\n    },\n    {\n        title: \"Immutable\",\n        text:\n            \"The grid data structures is immutable. This aligns well with applications using a flux architecture like React and Redux.\",\n    },\n    {\n        title: \"Typed\",\n        text: \"Since gridl is written in TypeScript it naturally comes with complete and up-to-date type definitions.\",\n    },\n];\n\nexport default IndexPage;\n"],"names":["children","className","useState","isFirstRender","setIsFirstRender","useEffect","href","rel","Helmet","async","defer","src","to","gettingStartedSlug","teasers","map","title","text","key","examples","example","codeExamples","code","language","description"],"sourceRoot":""}